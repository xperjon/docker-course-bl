#Remember >docker login
#         >docker stack deploy -c docker-stack.yml --with-registry-auth ar
version: '3'

services:
  web:
    image: blinfosoft/annual-report-web
    ports:
      - 8080:80
    deploy:
      replicas: 2
      update_config:
        parallelism: 2   
  api:
    image: blinfosoft/annual-report-api
    environment: 
      ENV: docker
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure      
  db:
    image: blinfosoft/annual-report-db
    ports:
      - 3307:3306
    volumes:
      - db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: annual_report
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure          

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8888:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

 # portainer:
 #   image: portainer/portainer
 #   ports:
 #     - "9000:9000"
 #   stop_grace_period: 1m30s
 #   command: -H unix:///var/run/docker.sock
 #   volumes:
 #     - /var/run/docker.sock:/var/run/docker.sock
 #     - portainer_data:/data
 #   deploy:
 #     placement:
 #       constraints: [node.role == manager]      

volumes:
  db-data:
  portainer_data: